<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on CMA</title>
    <link>https://kuklis.github.io/cma/tags/azure/</link>
    <description>Recent content in Azure on CMA</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2021, Krisztian Kuklis; all rights reserved.</copyright>
    <lastBuildDate>Fri, 24 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kuklis.github.io/cma/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rename Azure NIC in vRA8</title>
      <link>https://kuklis.github.io/cma/post/vra8-azure-rename-nic/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-azure-rename-nic/</guid>
      <description>
        
          &lt;p&gt;How to configure network interface name using event broker subscription&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
    &lt;H3&gt;Table of Contents&lt;/H3&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#subject&#34;&gt;Subject&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#new-iaas-api&#34;&gt;New IaaS API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#extensibility-vro-workflow&#34;&gt;Extensibility: vRO workflow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vra-event-broker-subscription&#34;&gt;vRA Event Broker Subscription&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#check-the-result&#34;&gt;Check the result&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;h2 id=&#34;subject&#34;&gt;Subject&lt;/h2&gt;
&lt;p&gt;vRA8 (up current version 8.5) does not support to set the name of network inteface in Azure, the default naming scheme apply (&lt;code&gt;subnetname-&amp;lt;suffix&amp;gt;&lt;/code&gt;). It is hard to see by name which NIC belongs to which virtual machine:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-rename-nic/default-naming.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;new-iaas-api&#34;&gt;New IaaS API&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.vmware.com/en/VMware-vRealize-Automation/8.5/rn/vmware-vrealize-automation-85-release-notes.html&#34;&gt;vRealize Automation 8.5 Release Notes&lt;/a&gt; mentions an IaaS API addition that allows us to change selected parameters via &lt;br&gt;&lt;code&gt;/iaas/api/machines/{id}/network-interfaces/{nicId}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Changing the name is supported, but only before provisioning, we need to call the API in Compute provision (&lt;code&gt;compute.provision.pre&lt;/code&gt;) phase. We&#39;ll use an extensibility EBS to trigger a vRO workflow. This workflow calls the IaaS API to change the name attribute. Here is a sample payload available via &lt;code&gt;inputProperties&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;addresses&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;      &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;componentId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudvm[0]&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;endpointId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;277a3feb-ec8e-4de3-82e7-60b7024ae9c7&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;externalIds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudvm-34&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;blueprintId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;43449016-b9a7-4640-bdb8-4520ce6a86e1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;resourceNames&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;cloudvm-34&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;customProperties&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;flavor&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;small&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;azureManagedDiskType&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Standard_LRS&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;az_rhel7&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;resourceGroupName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;testRG&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;countIndex&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;project&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a0ca29a2-4594-4281-b473-a490a16b92f8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;flavorMappingName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;small&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;componentTypeId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cloud.Azure.Machine&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;requestId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;fe924e4a-8cd8-4921-8790-4446045683e5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;macAddresses&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;      &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;deploymentId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;992dea79-d0e1-41bd-a716-4fa017b04496&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;zoneId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5e31fcab-e8d5-433c-8c6f-9a1816054600&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;projectId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;a0ca29a2-4594-4281-b473-a490a16b92f8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;subnetIds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;0f54c3f8-25ab-45bd-8dfb-6ce24eaacd4d&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;resourceIds&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;f47b4051-f000-43de-963b-d9a5acbac495&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The resourceIds array contains the VM id. We need to identify the network interface id, the IaaS API can provide it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;curl -s -k -H &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$access_token&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://vra8.corp.local/iaas/api/machines/f47b4051-f000-43de-963b-d9a5acbac495&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq &lt;span class=&#34;s1&#34;&gt;&amp;#39;._links[&amp;#34;network-interfaces&amp;#34;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the output we have the path of the NIC wee need to use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;hrefs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;/iaas/api/machines/f47b4051-f000-43de-963b-d9a5acbac495/network-interfaces/6ab905bc-7ff1-4639-981f-dbbec4a93949&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;extensibility-vro-workflow&#34;&gt;Extensibility: vRO workflow&lt;/h2&gt;
&lt;p&gt;For vRA REST API we use the &lt;a href=&#34;https://marketplace.cloud.vmware.com/services/details/vmware-vrealize-orchestrator-plug-in-for-vrealize-automation-1?slug=true&#34;&gt;Orchestrator Plug-in for vRealize Automation&lt;/a&gt;:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-rename-nic/vra-endpoint.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following sample workflow will modify the NIC name to &lt;code&gt;&amp;lt;vmname&amp;gt;-nic&lt;/code&gt;. The &lt;code&gt;inputProperties&lt;/code&gt; contains the EBS payload, and &lt;code&gt;vraHost&lt;/code&gt; is the VRA:Host endpoint. We need to specify the new API version 2021-07-15 to enable this functionality.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vraHost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createRestClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/iaas/api/machines/&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;inputProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resourceIds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET statusCode: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contentAsString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;network-interfaces&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hrefs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nic_link&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;PATCH&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nic_link&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;?apiVersion=2021-07-15&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;inputProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resourceNames&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;-nic&amp;#34;}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;PATCH statusCode: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can download the &lt;em&gt;com.azure.utils&lt;/em&gt; package containing the workflow from GitHub: &lt;a href=&#34;https://github.com/kuklis/vro8-packages&#34;&gt;https://github.com/kuklis/vro8-packages&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vra-event-broker-subscription&#34;&gt;vRA Event Broker Subscription&lt;/h2&gt;
&lt;p&gt;Now we create an EBS for the workflow:
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-rename-nic/ebs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is important to make the EBS blocking so that vRA waits for the workflow run and the change made.&lt;/p&gt;
&lt;h2 id=&#34;check-the-result&#34;&gt;Check the result&lt;/h2&gt;
&lt;p&gt;After deploying a new Azure VM, the NIC name matches the VM name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-rename-nic/custom-naming.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>vRA8 Azure integration with PowerShell</title>
      <link>https://kuklis.github.io/cma/post/vra8-azure-powershell/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-azure-powershell/</guid>
      <description>
        
          &lt;p&gt;How to write additional resource actions in PowerShell.&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
    &lt;H3&gt;Table of Contents&lt;/H3&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#deallocate-a-vm&#34;&gt;Deallocate a VM&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#development-environment&#34;&gt;Development Environment&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#connect-to-azure&#34;&gt;Connect to Azure&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#stop_deallocateps1-script&#34;&gt;stop_deallocate.ps1 Script&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#package-the-code&#34;&gt;Package the Code&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#vro-action&#34;&gt;vRO Action&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#vro-workflow&#34;&gt;vRO Workflow&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#resource-action&#34;&gt;Resource Action&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#run-the-action&#34;&gt;Run the Action&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#azure-status&#34;&gt;Azure status&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;vRA8 provides resource actions for Azure VMs out of box. Also, we can create custom actions by running vRO workflows. vRO8 supports PowerShell as scripting language, so we can use the Azure PowerShell modules to extend vRA8.&lt;/p&gt;
&lt;h2 id=&#34;deallocate-a-vm&#34;&gt;Deallocate a VM&lt;/h2&gt;
&lt;p&gt;vRA8 can stop a VM but it is not deallocated, so charges still apply.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/stopped.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s create a custom action to deallocate a virtual machine.&lt;/p&gt;
&lt;h3 id=&#34;development-environment&#34;&gt;Development Environment&lt;/h3&gt;
&lt;p&gt;As vRO8 runs PowerShell on Linux, I chose Linux (WSL, in fact) as the development and test platform. Windows should also work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt install powershell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now create a folder for the action and download the necessary modules (Az.Accounts will be downloaded as a dependency).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mkdir -p deallocate/Modules
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; deallocate
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;pwsh -c Get-PSRepository
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;pwsh -c &lt;span class=&#34;s2&#34;&gt;&amp;#34;Save-Module -Name Az.Compute -Path ./Modules/ -Repository PSGallery&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;connect-to-azure&#34;&gt;Connect to Azure&lt;/h3&gt;
&lt;p&gt;We need the tenant ID, an application ID and secret to connect to Azure. I recommend to reuse the same Enterprise Application crecentials created for vRA8 Azure cloud account. See &lt;a href=&#34;https://docs.vmware.com/en/vRealize-Automation/8.4/Using-and-Managing-Cloud-Assembly/GUID-F7656A16-6E21-4D5E-8F3A-AF38D365555F.html&#34;&gt;Configure Microsoft Azure for use with vRealize Automation Cloud Assembly&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;stop_deallocateps1-script&#34;&gt;stop_deallocate.ps1 Script&lt;/h3&gt;
&lt;p&gt;Create the following script in the &lt;code&gt;deallocate&lt;/code&gt; folder created earlier:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Az.Accounts&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Import-Module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Az.Compute&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$vmName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vmName&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$rgName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rgName&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$azTenantId&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;azTenantId&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$azClientId&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;azClientId&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$azClientSecret&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$inputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;azClientSecret&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$secstr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-TypeName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Security&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SecureString&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$azClientSecret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToCharArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;ForEach&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-Object&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$secstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AppendChar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$cred&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Object&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-TypeName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Management&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Automation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PSCredential&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ArgumentList&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$azClientId&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$secstr&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$resp_connectAzAccount&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Connect-AzAccount&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ServicePrincipal&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Credential&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cred&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Tenant&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$azTenantId&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ErrorAction&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Stop&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;Write-Host&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Connected Azure Subscription ID:&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;Get-AzSubscription&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Write-Host&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;Stop-AzVM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Verbose&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vmName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-force&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ResourceGroupName&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rgName&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ErrorAction&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Stop&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;  &lt;span class=&#34;nb&#34;&gt;Write-Host&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Successfully completed: $?&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$outputs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;@{}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$outputs&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inputs are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vmName&lt;/code&gt; (name of the virtual machine to stop)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rgName&lt;/code&gt; (Azure resource group name)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;azTenantId&lt;/code&gt; (Azure tenant ID)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;azClientId&lt;/code&gt; (Azure application/client ID)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;azClientSecret&lt;/code&gt; (Azure application/client secret)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Connect-AzAccount&lt;/code&gt; authenticates to Azure, then &lt;code&gt;Stop-AzVM&lt;/code&gt; stops and deallocates the VM. Any failures will result an exception thrown.&lt;/p&gt;
&lt;h3 id=&#34;package-the-code&#34;&gt;Package the Code&lt;/h3&gt;
&lt;p&gt;We need to create a zip file with the PowerShell script and its dependencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;zip -r --exclude&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;*.zip -X stop_deallocate.zip .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vro-action&#34;&gt;vRO Action&lt;/h3&gt;
&lt;p&gt;We need to create a new action with PowerShell runtime and import the zip file created. The entry point is stop_deallocate.handler (script name + function name):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/create_action.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Also, define the inputs as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/action_inputs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;vro-workflow&#34;&gt;vRO Workflow&lt;/h3&gt;
&lt;p&gt;Let&#39;s create a simple workflow that&#39;ll be called by vRA (no inputs or outputs are required).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/workflow.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We get the name of the VM from the context, Azure credentials are coming from configuration element attributes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resourceProperties&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;__metadata_resourceProperties&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;vmName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;resourceProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resourceName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resource-action&#34;&gt;Resource Action&lt;/h3&gt;
&lt;p&gt;Now we define a resource action for Azure VMs. We can add a description about the action on the Edit Request Parameters form.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/action.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-the-action&#34;&gt;Run the Action&lt;/h3&gt;
&lt;p&gt;Now choose an Azure virtual machine and select the action &lt;em&gt;Stop and Deallocate&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/action_dropdown.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/action_form.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Workflow logs are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;INFO __item_stack:/item1
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;INFO __item_stack:/item2
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;INFO WARNING: The provided service principal secret will be included in the &amp;#39;AzureRmContext.json&amp;#39; file found in the user profile ( /root/.Azure ). Please ensure that this directory has appropriate protections.
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;INFO Connected Azure Subscription ID:
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;INFO dddddddd-aaaaaaaaa-8888-ffffffffffff
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;INFO VERBOSE: Performing the operation &amp;#34;Stop&amp;#34; on target &amp;#34;cloudvm-508&amp;#34;.
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;INFO Successfully completed: True
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;INFO __item_stack:/item0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;azure-status&#34;&gt;Azure status&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-azure-powershell/deallocated.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;download&#34;&gt;Download&lt;/h3&gt;
&lt;p&gt;Workflow, action and package can be downloaded: &lt;a href=&#34;https://github.com/kuklis/vra8-azure&#34;&gt;https://github.com/kuklis/vra8-azure&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Using the same method we can define custom actions running Azure PowerShell commands available.&lt;/p&gt;
        
      </description>
    </item>
    
    <item>
      <title>vRA8 Azure cloud account storage exception</title>
      <link>https://kuklis.github.io/cma/post/vra8-azure-storage-exception/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-azure-storage-exception/</guid>
      <description>
        
          &lt;p&gt;Transparent HTTPS proxy causing troubles.&lt;/p&gt;
&lt;p&gt;An Azure cloud account is added in Cloud Assembly following &lt;a href=&#34;https://docs.vmware.com/en/vRealize-Automation/8.3/Using-and-Managing-Cloud-Assembly/GUID-F7656A16-6E21-4D5E-8F3A-AF38D365555F.html&#34;&gt;Configure Microsoft Azure for use with vRealize Automation Cloud Assembly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It showed regions and storage accounts, could access flavors and images, but Compute resources had no Azure entries.&lt;/p&gt;
&lt;p&gt;The account reported a warning and showed data collection error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;java.lang.IllegalStateException: Azure enumeration adapter &amp;#39;/provisioning/azure/storage-enumeration-adapter-v2&amp;#39; for &amp;#39;/resources/endpoints/yyyyyyyyyyyyyyyyyyyy&amp;#39;: FAILED with com.microsoft.azure.storage.StorageException: 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;	at com.microsoft.azure.storage.StorageException.translateException(StorageException.java:87)
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;	at com.microsoft.azure.storage.core.ExecutionEngine.executeWithRetry(ExecutionEngine.java:220)
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;	at com.microsoft.azure.storage.blob.CloudBlobClient.listContainersWithPrefixSegmented(CloudBlobClient.java:348)
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;	at com.microsoft.azure.storage.blob.CloudBlobClient.listContainersSegmented(CloudBlobClient.java:261)
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;	at com.vmware.photon.controller.model.adapters.azure.enumeration.AzureStorageEnumerationAdapterServiceV2.lambda$getStorageContainersAndDisks$37(AzureStorageEnumerationAdapterServiceV2.java:1120)
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;	at com.vmware.photon.controller.model.resources.util.PhotonModelUtils.lambda$runInExecutor$20(PhotonModelUtils.java:1043)
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;	at java.base/java.lang.Thread.run(Thread.java:834)
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:326)
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:269)
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:645)
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:464)
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:360)
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:392)
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:422)
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:183)
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:168)
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1148)
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1057)
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:395)
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:567)
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;	at com.microsoft.azure.storage.core.ExecutionEngine.executeWithRetry(ExecutionEngine.java:115)
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;	... 9 more
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:313)
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:222)
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:129)
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:629)
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;	... 26 more
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;	... 32 more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looks like it has certificate issues. At our environment a transparent HTTPS proxy is installed, its certificate needs to be installed in vRA.&lt;/p&gt;
&lt;p&gt;Upload the certificate to the vRA appliance and check it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;vracli certificate proxy --validate proxy.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output shows sha256 sum of the certificate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;Certificate is signed by itself according to our internal policy
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Certificate with sha256 sum: 50dfa6f5780f5d7341b2436b3253deb0812b29da28ef28446f8dfe34c558f cannot be validated as it is self-signed.
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;If you want to proceed with that certificate, please confirm the sha256 sum using parameter &amp;#39;--sha256&amp;#39; and the sha256 sum of the certificate.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Import the certificate and redeploy vRA services:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;vracli certificate proxy --set proxy.cer --sha256 50dfa6f5780f5d7341b2436b3253deb0812b29da28ef28446f8dfe34c558f
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;/opt/scripts/deploy.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
