<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMA</title>
    <link>https://kuklis.github.io/cma/</link>
    <description>Recent content on CMA</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2021, Krisztian Kuklis; all rights reserved.</copyright>
    <lastBuildDate>Wed, 19 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kuklis.github.io/cma/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fake Context Wrapper for vRO actions</title>
      <link>https://kuklis.github.io/cma/post/fake-context-wrapper/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/fake-context-wrapper/</guid>
      <description>
        
          &lt;p&gt;A possible method how to run vRO actions requiring System Context&lt;/p&gt;
&lt;p&gt;We have some vRO actions using &lt;code&gt;System.getContext()&lt;/code&gt; to collect current running parameters ie. tenant, request id etc. They are mostly used on vRA custom forms to provide context sensitive dropdowns. The following cases are some examples when context is not available and the actions fail to run corretly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XaaS forms&lt;/li&gt;
&lt;li&gt;Running actions from vRO workflows directly, without vRA&lt;/li&gt;
&lt;li&gt;automated testing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;possible-solutions&#34;&gt;Possible solutions&lt;/h2&gt;
&lt;h3 id=&#34;duplicate&#34;&gt;Duplicate&lt;/h3&gt;
&lt;p&gt;You can copy the action, add the required context parameters as inputs and bind the input parameters. This will lead to code duplication and double maintain effort.&lt;/p&gt;
&lt;h3 id=&#34;refactor&#34;&gt;Refactor&lt;/h3&gt;
&lt;p&gt;You can move the code to another action with input parameters. Your original action will still fetch the context and call the new action providing the input via parameters. You can use the new action when no context is available directly.&lt;/p&gt;
&lt;h3 id=&#34;action-wrapper-code&#34;&gt;Action wrapper code&lt;/h3&gt;
&lt;p&gt;The third method, that I want to demonstrate, is about writing some wrapper code to create a fake context for the original action. This is useful when you do not want or cannot change the original action, but want to use it without duplication.&lt;/p&gt;
&lt;h4 id=&#34;sample-action&#34;&gt;Sample action&lt;/h4&gt;
&lt;p&gt;For demonstation purposes let&#39;s have a getOptions action with the output of sting array:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tenant&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;__asd_tenantRef&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;prod&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;PR1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PR2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;D1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;D2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This can be used as an external source of a custom form dropdown: will provide different values for prod and non-prod tenants:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/fake-context-wrapper/dropdown.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The same code fails to get tenant name on an XaaS blueprint:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/fake-context-wrapper/dropdown-xaas.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;the-wrapper-code&#34;&gt;The wrapper code&lt;/h4&gt;
&lt;p&gt;This is the wrapper action getOptionsWrapper with an input parameter &lt;code&gt;tenant&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// define context values
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;__asd_tenantRef&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// define object and functions
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fakeContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;parameterNames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// override getContext()
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fakeContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;com.test.dropdowns&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The code overrides the &lt;code&gt;System.getContext()&lt;/code&gt; JavaScript function with a function returning fake context information.&lt;/p&gt;
&lt;p&gt;The input parameter can be bound in the XaaS form. Now it works fine:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/fake-context-wrapper/dropdown-wrapper.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A simple unit test workflow script with a similar code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// define context values
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;__asd_tenantRef&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// define object and functions
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fakeContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;param&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;parameterNames&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// override getContext()
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getContext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fakeContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;com.test.dropdowns&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[&amp;#34;D1&amp;#34;,&amp;#34;D2&amp;#34;]&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;getOptions action test failure&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>vRA8 Azure cloud account storage exception</title>
      <link>https://kuklis.github.io/cma/post/vra8-azure-storage-exception/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-azure-storage-exception/</guid>
      <description>
        
          &lt;p&gt;Transparent HTTPS proxy causing troubles.&lt;/p&gt;
&lt;p&gt;An Azure cloud account is added in Cloud Assembly following &lt;a href=&#34;https://docs.vmware.com/en/vRealize-Automation/8.3/Using-and-Managing-Cloud-Assembly/GUID-F7656A16-6E21-4D5E-8F3A-AF38D365555F.html&#34;&gt;Configure Microsoft Azure for use with vRealize Automation Cloud Assembly&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It showed regions and storage accounts, could access flavors and images, but Compute resources had no Azure entries.&lt;/p&gt;
&lt;p&gt;The account reported a warning and showed data collection error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;java.lang.IllegalStateException: Azure enumeration adapter &amp;#39;/provisioning/azure/storage-enumeration-adapter-v2&amp;#39; for &amp;#39;/resources/endpoints/yyyyyyyyyyyyyyyyyyyy&amp;#39;: FAILED with com.microsoft.azure.storage.StorageException: 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;	at com.microsoft.azure.storage.StorageException.translateException(StorageException.java:87)
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;	at com.microsoft.azure.storage.core.ExecutionEngine.executeWithRetry(ExecutionEngine.java:220)
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;	at com.microsoft.azure.storage.blob.CloudBlobClient.listContainersWithPrefixSegmented(CloudBlobClient.java:348)
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;	at com.microsoft.azure.storage.blob.CloudBlobClient.listContainersSegmented(CloudBlobClient.java:261)
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;	at com.vmware.photon.controller.model.adapters.azure.enumeration.AzureStorageEnumerationAdapterServiceV2.lambda$getStorageContainersAndDisks$37(AzureStorageEnumerationAdapterServiceV2.java:1120)
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;	at com.vmware.photon.controller.model.resources.util.PhotonModelUtils.lambda$runInExecutor$20(PhotonModelUtils.java:1043)
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;	at java.base/java.lang.Thread.run(Thread.java:834)
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;Caused by: javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;	at java.base/sun.security.ssl.Alert.createSSLException(Alert.java:131)
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:326)
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:269)
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.fatal(TransportContext.java:264)
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:645)
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:464)
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:360)
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;	at java.base/sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:392)
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:444)
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;	at java.base/sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:422)
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;	at java.base/sun.security.ssl.TransportContext.dispatch(TransportContext.java:183)
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;	at java.base/sun.security.ssl.SSLTransport.decode(SSLTransport.java:168)
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.decode(SSLSocketImpl.java:1148)
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.readHandshakeRecord(SSLSocketImpl.java:1057)
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;	at java.base/sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:395)
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;	at java.base/sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:567)
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;	at java.base/sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1587)
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;	at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1515)
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;	at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;	at java.base/sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:334)
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;	at com.microsoft.azure.storage.core.ExecutionEngine.executeWithRetry(ExecutionEngine.java:115)
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;	... 9 more
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:439)
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:306)
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;	at java.base/sun.security.validator.Validator.validate(Validator.java:264)
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:313)
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:222)
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;	at java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:129)
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;	at java.base/sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:629)
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;	... 26 more
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;	at java.base/sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;	at java.base/sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;	at java.base/java.security.cert.CertPathBuilder.build(CertPathBuilder.java:297)
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;	at java.base/sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:434)
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;	... 32 more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Looks like it has certificate issues. At our environment a transparent HTTPS proxy is installed, its certificate needs to be installed in vRA.&lt;/p&gt;
&lt;p&gt;Upload the certificate to the vRA appliance and check it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;vracli certificate proxy --validate proxy.cer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output shows sha256 sum of the certificate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;Certificate is signed by itself according to our internal policy
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;Certificate with sha256 sum: 50dfa6f5780f5d7341b2436b3253deb0812b29da28ef28446f8dfe34c558f cannot be validated as it is self-signed.
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;If you want to proceed with that certificate, please confirm the sha256 sum using parameter &amp;#39;--sha256&amp;#39; and the sha256 sum of the certificate.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Import the certificate and redeploy vRA services:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;vracli certificate proxy --set proxy.cer --sha256 50dfa6f5780f5d7341b2436b3253deb0812b29da28ef28446f8dfe34c558f
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;/opt/scripts/deploy.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
        
      </description>
    </item>
    
    <item>
      <title>vRA8 with ServiceNow External Approvals</title>
      <link>https://kuklis.github.io/cma/post/vra8-servicenow-approval/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-servicenow-approval/</guid>
      <description>
        
          &lt;p&gt;Let&#39;s use ServiceNow with vRealize Automation 8 as an external approval system.&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
    &lt;H3&gt;Table of Contents&lt;/H3&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#history&#34;&gt;History&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vra8-approval-system&#34;&gt;vRA8 approval system&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#workaround&#34;&gt;Workaround&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#sequence&#34;&gt;Sequence&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#policy&#34;&gt;Policy&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#servicenow&#34;&gt;ServiceNow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vro&#34;&gt;vRO&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#workflows&#34;&gt;Workflows&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#download&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vra&#34;&gt;vRA&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#event-broker-subscription&#34;&gt;Event Broker Subscription&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#test-catalog-request&#34;&gt;Test Catalog Request&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;p&gt;vRA7 approval system supports easy &lt;a href=&#34;https://docs.vmware.com/en/vRealize-Automation/7.6/com.vmware.vra.prepare.use.doc/GUID-67A61A9A-BF1D-4938-976C-A72DEED58163.html&#34;&gt;integration with external systems&lt;/a&gt; via event subscriptions. Event messages are created when approvals required and workflow subscriptions provide integration with external systems, such as ServiceNow or other service management platforms.&lt;br&gt;
Based on the workflow output requests are approved / rejected.&lt;/p&gt;
&lt;h2 id=&#34;vra8-approval-system&#34;&gt;vRA8 approval system&lt;/h2&gt;
&lt;h3 id=&#34;limitations&#34;&gt;Limitations&lt;/h3&gt;
&lt;p&gt;vRA8 (up to 8.3) &lt;a href=&#34;https://docs.vmware.com/en/vRealize-Automation/8.3/vrealize-automation-transition/GUID-BFCAEA52-C996-4C5A-A0A7-08A029143C66.html&#34;&gt;does not support approvals via EBS&lt;/a&gt;, only vRA users can approve. Event broker subscriptions can be used to start a vRO workflow right after the requests submitted but potentially long-running workflows do not give any feedback to the user why the deployment takes so long.&lt;/p&gt;
&lt;h3 id=&#34;workaround&#34;&gt;Workaround&lt;/h3&gt;
&lt;p&gt;To provide a better user experience we&#39;ll reuse the current approval policies. The idea is to set a service user as the approver, and approve the vRA request via REST API. We need a background process to wait for the external approval to happen and once the decision is made this process can let the vRA request go. This background process will be running on vRO as a scheduled workflow.&lt;/p&gt;
&lt;p&gt;We&#39;ll run this external system polling workflow recurrently. This helps to avoid long-running workflows: we check if the external approval has happened and go back sleeping if it has not.&lt;/p&gt;
&lt;h3 id=&#34;sequence&#34;&gt;Sequence&lt;/h3&gt;
&lt;p&gt;The following diagram shows the steps in case of a deployment request.&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/approval-sequence.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;policy&#34;&gt;Policy&lt;/h3&gt;
&lt;p&gt;Let&#39;s create an approval policy in Service Broker for Deployment Create action. Approver is a service user:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/approval-policy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;servicenow&#34;&gt;ServiceNow&lt;/h2&gt;
&lt;p&gt;You can register a developer ServiceNow instance at &lt;a href=&#34;https://developer.servicenow.com/&#34;&gt;https://developer.servicenow.com/&lt;/a&gt; if needed.&lt;/p&gt;
&lt;p&gt;We need a catalog item that is not auto-approving. Ordering the catalog item results in a request that we&#39;ll wait to be approved. We will use a default demo catalog item for testing purposes: &lt;em&gt;VM Provisioning&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Also a service user must be created for REST API. This user needs access to the chosen catalog item.&lt;/p&gt;
&lt;h2 id=&#34;vro&#34;&gt;vRO&lt;/h2&gt;
&lt;p&gt;We need two REST endpoints. ServiceNow API uses Basic authentication, so we create a REST host providing the credentials as well:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/snow-endpoint.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;For vRA REST API we use the &lt;a href=&#34;https://marketplace.cloud.vmware.com/services/details/vmware-vrealize-orchestrator-plug-in-for-vrealize-automation-1?slug=true&#34;&gt;Orchestrator Plug-in for vRealize Automation&lt;/a&gt;:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vra-endpoint.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;workflows&#34;&gt;Workflows&lt;/h3&gt;
&lt;p&gt;Now import the integration package &lt;em&gt;com.servicenow.approval&lt;/em&gt; that will provide the workflows:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vro-workflows.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Workflow Name&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Request Approval&lt;/td&gt;
&lt;td&gt;Open ServiceNow request and schedule polling workflow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Catalog - VM Provisioning&lt;/td&gt;
&lt;td&gt;Request the catalog item (subflow)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Poll SNOW and Approve vRA&lt;/td&gt;
&lt;td&gt;The scheduled workflow checking ServiceNow and approving in vRA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Check Approval Status&lt;/td&gt;
&lt;td&gt;Fetches the approval status of the request opened (subflow)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;download&#34;&gt;Download&lt;/h3&gt;
&lt;p&gt;Workflows and package can be downloaded: &lt;a href=&#34;https://github.com/kuklis/vra8-servicenow-approval&#34;&gt;https://github.com/kuklis/vra8-servicenow-approval&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vra&#34;&gt;vRA&lt;/h2&gt;
&lt;h3 id=&#34;event-broker-subscription&#34;&gt;Event Broker Subscription&lt;/h3&gt;
&lt;p&gt;Now we create the EBS that&#39;ll trigger the workflow &lt;em&gt;Request Approval&lt;/em&gt;. Event topic is &lt;em&gt;Deployment Requested&lt;/em&gt;:&lt;br&gt;
Event is fired before deployment is provisioned for both cloud template and catalog requests&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vra-ebs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We filter the event by type to ensure only deployment create will trigger it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;event.data.eventType == &amp;quot;CREATE_DEPLOYMENT&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;test-catalog-request&#34;&gt;Test Catalog Request&lt;/h3&gt;
&lt;p&gt;Let&#39;s try the solution out in Service Broker. After submitting the request, we can see an approval is needed:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vra-approval-pending.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Request is opened and pending for approval:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/snow-request.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once it is approved, the deployment completes:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vra-deployment-success.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In case ServiceNow request is rejected, vRA deployment is also rejected:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-servicenow-approval/vra-deployment-rejected.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
