<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XaaS on CMA</title>
    <link>https://kuklis.github.io/cma/categories/xaas/</link>
    <description>Recent content in XaaS on CMA</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2021, Krisztian Kuklis; all rights reserved.</copyright>
    <lastBuildDate>Wed, 04 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kuklis.github.io/cma/categories/xaas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vRA8 XaaS Custom Destroy Workflow</title>
      <link>https://kuklis.github.io/cma/post/vra8-xaas-custom-destroy-workflow/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kuklis.github.io/cma/post/vra8-xaas-custom-destroy-workflow/</guid>
      <description>
        
          &lt;p&gt;How to run a workflow at XaaS deployment deletion to free resources&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
    &lt;H3&gt;Table of Contents&lt;/H3&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#plain-ol-vro-workflows&#34;&gt;Plain ol&#39; vRO workflows&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#our-demonstation-xaas-a-simple-ipam&#34;&gt;Our demonstation XaaS: a simple IPAM&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#vra-api&#34;&gt;vRA API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#access-deployment-api-from-vro&#34;&gt;Access Deployment API from vRO&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#xaas-destroy-workflow&#34;&gt;XaaS destroy workflow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#event-broker-subscription&#34;&gt;Event Broker Subscription&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
  &lt;/div&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;XaaS (Anything as a Service) is a great way to automate IT assets in vRA. But if your target objects are not natively supported by vRA/vRO, then making a create -&amp;gt; decommission lifecycle is not that easy. You can map a vRO object to a vRA custom resource, or use ABX with user defined schema to define a custom resource.&lt;/p&gt;
&lt;p&gt;If you choose vRO object mapping, you either need to use existing vRO inventory objects (provided by plugins), or you need to create a new object type by using Dynamic Types or write a new plugin from scratch. None of them are easy.&lt;/p&gt;
&lt;p&gt;If you choose ABX with schema definition, you need to write ABX actions (Python/NodeJS/PowerShell scripts) and you cannot modify the schema after creation.&lt;/p&gt;
&lt;h2 id=&#34;plain-ol-vro-workflows&#34;&gt;Plain ol&#39; vRO workflows&lt;/h2&gt;
&lt;p&gt;vRO workflows can be added to Service Broker (as a content source) and be run directly, resulting in a deployment. However, these deployments have no lifecycle operations, deleting simply removes the deployment from the list of resources provisioned (vRA7 called it &lt;em&gt;Dismiss&lt;/em&gt; action). Our goal is to make vRA to call a destroy workflow that frees the resources created/reserved by the deploy workflow.&lt;/p&gt;
&lt;p&gt;This will result in an easier to maintain solution: no need to create custom resources and we can reuse existing vRO workflows to mimic service decommission.&lt;/p&gt;
&lt;h2 id=&#34;our-demonstation-xaas-a-simple-ipam&#34;&gt;Our demonstation XaaS: a simple IPAM&lt;/h2&gt;
&lt;p&gt;The demo IPAM solution can do two things: reserve IP address(es) from a subnet, and free up a reserved IP address. No other information is stored so it is not production ready... The objects we&#39;d like to manage are the addresses themselves. Two lifecycle operations are available: allocate and release.&lt;/p&gt;
&lt;p&gt;The reserved addresses are stored in vRO resource elements (by subnet) so there are no external dependencies to setup and test this XaaS:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/resource_elements.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
(In the example above the following IPs are reserved: 10.0.1.1, 10.0.1.4, 10.0.1.5)&lt;/p&gt;
&lt;p&gt;Three workflows provide the functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define new subnet&lt;br&gt;creates a new vRO resource element to store IP addresses&lt;/li&gt;
&lt;li&gt;IP Allocation&lt;br&gt;allocates one or more addresses from the chosen subnet, registers in the resource element and returns the reserved address(es)&lt;/li&gt;
&lt;li&gt;IP Release&lt;br&gt;removes an address from the reserved list (resource element)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First import com.xaas.destroy.package from &lt;a href=&#34;https://github.com/kuklis/vro8-packages&#34;&gt;https://github.com/kuklis/vro8-packages&lt;/a&gt; into vRO, and create a content source in Service Broker:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/new_content_source.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Share the content source to a project:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/content_sharing.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Catalog items:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/catalog.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Start with defining your subnets (creating the empty resource elements):&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/new_subnet.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;New IP request:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/new_ip_req.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Result of requesting 2 IPs:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The catalog item &lt;em&gt;IP release&lt;/em&gt; is very simple with only one input: the address to remove from the list of allocated IPs.&lt;/p&gt;
&lt;h2 id=&#34;vra-api&#34;&gt;vRA API&lt;/h2&gt;
&lt;p&gt;vRealize Automation REST API provides access to deployment data via the Deployment API:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;curl -s -k -H &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Authorization: Bearer &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$access_token&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;https://vra8.corp.local/deployment/api/deployments/7de98f11-a490-4dc1-8f6f-da20ff638fce?expand=resources&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The response contains workflow inputs and outputs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;7de98f11-a490-4dc1-8f6f-da20ff638fce&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;IP for NAS&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;orgId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;673be853-8004-4216-95ad-3cb32e6754ab&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;catalogItemId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ea45a47f-ce9b-34e5-84d0-4b11738d9f4d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;blueprintId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;inline-blueprint&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;createdAt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2022-05-09T14:14:48.910894Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;createdBy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kuklis&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;ownedBy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kuklis&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;lastUpdatedAt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2022-05-09T14:15:14.472976Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;lastUpdatedBy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kuklis&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;inputs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;subnet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;projectId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;33e98713-0902-4024-b023-6c4ffd802f53&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;resources&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;11d054d3-f70c-4d4e-abad-259d7d872618&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;workflow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vro.workflow&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;outputs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;IPs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Array/string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;              &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.1.2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;              &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.0.1.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;__metadata_orgId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;673be853-8004-4216-95ad-3cb32e6754ab&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;__metadata_userName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kuklis&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;__metadata_projectId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;33e98713-0902-4024-b023-6c4ffd802f53&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;__metadata_requestId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;26c22be8-b4eb-4cb9-bf2a-338e88b6c28e&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;46&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;47&lt;/span&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;__metadata_deploymentId&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;48&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;49&lt;/span&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;7de98f11-a490-4dc1-8f6f-da20ff638fce&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;50&lt;/span&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;51&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;52&lt;/span&gt;        &lt;span class=&#34;nt&#34;&gt;&amp;#34;resourceName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;IP Allocation&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;53&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;54&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;createdAt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2022-05-09T14:15:00.276046Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;55&lt;/span&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;56&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;57&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;58&lt;/span&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;CREATE_SUCCESSFUL&amp;#34;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;59&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;access-deployment-api-from-vro&#34;&gt;Access Deployment API from vRO&lt;/h2&gt;
&lt;p&gt;For vRA REST API we use the &lt;a href=&#34;https://marketplace.cloud.vmware.com/services/details/vmware-vrealize-orchestrator-plug-in-for-vrealize-automation011?slug=true&#34;&gt;Orchestrator Plug-in for vRealize Automation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We create a service user &lt;tt&gt;apiuser&lt;/tt&gt; that is able to read any deployment.&lt;br&gt;First we define a new role:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/new_role.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then assign the service user (it was granted Organization Member and Service Broker User roles previously) to this role providing the extra permission:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/assign_user.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;and create a vRA endpoint within vRO:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/vra_endpoint.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now &lt;tt&gt;apiuser&lt;/tt&gt; can read any deployment via API. Here is how we extract the IP addresses from the workflow output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vraHost&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;VraHostManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;findHostsByType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;vra-onprem&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;apiuser&amp;#39;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vraHost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createRestClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/deployment/api/deployments/&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;inputProperties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;deploymentId&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;?expand=resources&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;restClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;HTTP response code: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contentAsString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;content = &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addresses&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;outputs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; 
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;properties&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;IPs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;xaas-destroy-workflow&#34;&gt;XaaS destroy workflow&lt;/h2&gt;
&lt;p&gt;Now we create an EBS workflow to release all addresses found in the deployment output. Being an EBS all inputs are provided via the &lt;tt&gt;inputProperties&lt;/tt&gt; input parameter. The above code (Get deployment info) collects the addresses and all we have to do is call the &lt;em&gt;IP Release&lt;/em&gt; workflow to each address.&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/ebs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;event-broker-subscription&#34;&gt;Event Broker Subscription&lt;/h2&gt;
&lt;p&gt;We want to run the destroy workflow only for &lt;em&gt;IP Allocation&lt;/em&gt; deployments, so we identify the UUID of the catalog item:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/catalog_item.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now define the EBS. The event topic is &lt;em&gt;Deployment requested&lt;/em&gt; and we run the destroy workflow only if the request is &lt;tt&gt;DESTROY_DEPLOYMENT&lt;/tt&gt; and the catalog item UUID identified matches:&lt;br&gt;
&lt;img src=&#34;https://kuklis.github.io/cma/cma/img/vra8-xaas-custom-destroy-workflow/new_ebs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following logs are produced at deleting the IP Request deployment:&lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;ln&#34;&gt;  1&lt;/span&gt;2022-05-09 17:04:18.584 +02:00 INFO __item_stack:/item1
&lt;span class=&#34;ln&#34;&gt;  2&lt;/span&gt;2022-05-09 17:04:18.586 +02:00 INFO inputProperties = {
&lt;span class=&#34;ln&#34;&gt;  3&lt;/span&gt;  &amp;#34;requestType&amp;#34;: &amp;#34;CATALOG&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  4&lt;/span&gt;  &amp;#34;catalogItemVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  5&lt;/span&gt;  &amp;#34;blueprintVersion&amp;#34;: &amp;#34;&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  6&lt;/span&gt;  &amp;#34;description&amp;#34;: &amp;#34;&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  7&lt;/span&gt;  &amp;#34;contextId&amp;#34;: &amp;#34;51667ebf-7440-42b9-95f0-15428b7a78a7&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  8&lt;/span&gt;  &amp;#34;eventType&amp;#34;: &amp;#34;DESTROY_DEPLOYMENT&amp;#34;,
&lt;span class=&#34;ln&#34;&gt;  9&lt;/span&gt;  &amp;#34;userName&amp;#34;: &amp;#34;kuklis&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 10&lt;/span&gt;  &amp;#34;blueprintId&amp;#34;: &amp;#34;inline-blueprint&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 11&lt;/span&gt;  &amp;#34;userId&amp;#34;: &amp;#34;DEV.local:2c2bce76-279b-4aba-98c6-a55d00f5ee1b&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 12&lt;/span&gt;  &amp;#34;orgId&amp;#34;: &amp;#34;673be853-8004-4216-95ad-3cb32e6754ab&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 13&lt;/span&gt;  &amp;#34;catalogItemId&amp;#34;: &amp;#34;ea45a47f-ce9b-34e5-84d0-4b11738d9f4d&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 14&lt;/span&gt;  &amp;#34;deploymentId&amp;#34;: &amp;#34;7de98f11-a490-4dc1-8f6f-da20ff638fce&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 15&lt;/span&gt;  &amp;#34;requestInputs&amp;#34;: {},
&lt;span class=&#34;ln&#34;&gt; 16&lt;/span&gt;  &amp;#34;id&amp;#34;: &amp;#34;a0b70060-7aaf-422d-a2ff-54f179fa3e17&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 17&lt;/span&gt;  &amp;#34;projectName&amp;#34;: &amp;#34;Prod1&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 18&lt;/span&gt;  &amp;#34;failureMessage&amp;#34;: &amp;#34;&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 19&lt;/span&gt;  &amp;#34;projectId&amp;#34;: &amp;#34;33e98713-0902-4024-b023-6c4ffd802f53&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 20&lt;/span&gt;  &amp;#34;status&amp;#34;: &amp;#34;&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 21&lt;/span&gt;}
&lt;span class=&#34;ln&#34;&gt; 22&lt;/span&gt;2022-05-09 17:04:18.591 +02:00 INFO __item_stack:/item2
&lt;span class=&#34;ln&#34;&gt; 23&lt;/span&gt;2022-05-09 17:04:19.415 +02:00 INFO HTTP response code: 200
&lt;span class=&#34;ln&#34;&gt; 24&lt;/span&gt;2022-05-09 17:04:19.416 +02:00 INFO content = {
&lt;span class=&#34;ln&#34;&gt; 25&lt;/span&gt;  &amp;#34;id&amp;#34;: &amp;#34;7de98f11-a490-4dc1-8f6f-da20ff638fce&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 26&lt;/span&gt;  &amp;#34;name&amp;#34;: &amp;#34;IP for NAS&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 27&lt;/span&gt;  &amp;#34;orgId&amp;#34;: &amp;#34;673be853-8004-4216-95ad-3cb32e6754ab&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 28&lt;/span&gt;  &amp;#34;catalogItemId&amp;#34;: &amp;#34;ea45a47f-ce9b-34e5-84d0-4b11738d9f4d&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 29&lt;/span&gt;  &amp;#34;blueprintId&amp;#34;: &amp;#34;inline-blueprint&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 30&lt;/span&gt;  &amp;#34;createdAt&amp;#34;: &amp;#34;2022-05-09T14:14:48.910894Z&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 31&lt;/span&gt;  &amp;#34;createdBy&amp;#34;: &amp;#34;kuklis&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 32&lt;/span&gt;  &amp;#34;ownedBy&amp;#34;: &amp;#34;kuklis&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 33&lt;/span&gt;  &amp;#34;lastUpdatedAt&amp;#34;: &amp;#34;2022-05-09T15:04:16.691521Z&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 34&lt;/span&gt;  &amp;#34;lastUpdatedBy&amp;#34;: &amp;#34;kuklis&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 35&lt;/span&gt;  &amp;#34;inputs&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 36&lt;/span&gt;    &amp;#34;count&amp;#34;: 2,
&lt;span class=&#34;ln&#34;&gt; 37&lt;/span&gt;    &amp;#34;subnet&amp;#34;: &amp;#34;10.0.1&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 38&lt;/span&gt;  },
&lt;span class=&#34;ln&#34;&gt; 39&lt;/span&gt;  &amp;#34;projectId&amp;#34;: &amp;#34;33e98713-0902-4024-b023-6c4ffd802f53&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 40&lt;/span&gt;  &amp;#34;resources&amp;#34;: [
&lt;span class=&#34;ln&#34;&gt; 41&lt;/span&gt;    {
&lt;span class=&#34;ln&#34;&gt; 42&lt;/span&gt;      &amp;#34;id&amp;#34;: &amp;#34;11d054d3-f70c-4d4e-abad-259d7d872618&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 43&lt;/span&gt;      &amp;#34;name&amp;#34;: &amp;#34;workflow&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 44&lt;/span&gt;      &amp;#34;type&amp;#34;: &amp;#34;vro.workflow&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 45&lt;/span&gt;      &amp;#34;properties&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 46&lt;/span&gt;        &amp;#34;outputs&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 47&lt;/span&gt;          &amp;#34;IPs&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 48&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;Array/string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 49&lt;/span&gt;            &amp;#34;value&amp;#34;: [
&lt;span class=&#34;ln&#34;&gt; 50&lt;/span&gt;              &amp;#34;10.0.1.2&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 51&lt;/span&gt;              &amp;#34;10.0.1.3&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 52&lt;/span&gt;            ]
&lt;span class=&#34;ln&#34;&gt; 53&lt;/span&gt;          },
&lt;span class=&#34;ln&#34;&gt; 54&lt;/span&gt;          &amp;#34;__metadata_orgId&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 55&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 56&lt;/span&gt;            &amp;#34;value&amp;#34;: &amp;#34;673be853-8004-4216-95ad-3cb32e6754ab&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 57&lt;/span&gt;          },
&lt;span class=&#34;ln&#34;&gt; 58&lt;/span&gt;          &amp;#34;__metadata_userName&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 59&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 60&lt;/span&gt;            &amp;#34;value&amp;#34;: &amp;#34;kuklis&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 61&lt;/span&gt;          },
&lt;span class=&#34;ln&#34;&gt; 62&lt;/span&gt;          &amp;#34;__metadata_projectId&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 63&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 64&lt;/span&gt;            &amp;#34;value&amp;#34;: &amp;#34;33e98713-0902-4024-b023-6c4ffd802f53&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 65&lt;/span&gt;          },
&lt;span class=&#34;ln&#34;&gt; 66&lt;/span&gt;          &amp;#34;__metadata_requestId&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 67&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 68&lt;/span&gt;            &amp;#34;value&amp;#34;: &amp;#34;26c22be8-b4eb-4cb9-bf2a-338e88b6c28e&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 69&lt;/span&gt;          },
&lt;span class=&#34;ln&#34;&gt; 70&lt;/span&gt;          &amp;#34;__metadata_deploymentId&amp;#34;: {
&lt;span class=&#34;ln&#34;&gt; 71&lt;/span&gt;            &amp;#34;type&amp;#34;: &amp;#34;string&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 72&lt;/span&gt;            &amp;#34;value&amp;#34;: &amp;#34;7de98f11-a490-4dc1-8f6f-da20ff638fce&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 73&lt;/span&gt;          }
&lt;span class=&#34;ln&#34;&gt; 74&lt;/span&gt;        },
&lt;span class=&#34;ln&#34;&gt; 75&lt;/span&gt;        &amp;#34;resourceName&amp;#34;: &amp;#34;IP Allocation&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 76&lt;/span&gt;      },
&lt;span class=&#34;ln&#34;&gt; 77&lt;/span&gt;      &amp;#34;createdAt&amp;#34;: &amp;#34;2022-05-09T14:15:00.276046Z&amp;#34;,
&lt;span class=&#34;ln&#34;&gt; 78&lt;/span&gt;      &amp;#34;state&amp;#34;: &amp;#34;OK&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 79&lt;/span&gt;    }
&lt;span class=&#34;ln&#34;&gt; 80&lt;/span&gt;  ],
&lt;span class=&#34;ln&#34;&gt; 81&lt;/span&gt;  &amp;#34;status&amp;#34;: &amp;#34;DELETE_INPROGRESS&amp;#34;
&lt;span class=&#34;ln&#34;&gt; 82&lt;/span&gt;}
&lt;span class=&#34;ln&#34;&gt; 83&lt;/span&gt;2022-05-09 17:04:19.422 +02:00 INFO __item_stack:/item3
&lt;span class=&#34;ln&#34;&gt; 84&lt;/span&gt;2022-05-09 17:04:19.435 +02:00 INFO __item_stack:/item3/item4
&lt;span class=&#34;ln&#34;&gt; 85&lt;/span&gt;2022-05-09 17:04:19.447 +02:00 INFO __item_stack:/item3/item2
&lt;span class=&#34;ln&#34;&gt; 86&lt;/span&gt;2022-05-09 17:04:19.464 +02:00 INFO __item_stack:/item3/item1
&lt;span class=&#34;ln&#34;&gt; 87&lt;/span&gt;2022-05-09 17:04:19.466 +02:00 INFO Allocated at the moment: 1,2,3,4,5
&lt;span class=&#34;ln&#34;&gt; 88&lt;/span&gt;2022-05-09 17:04:19.467 +02:00 INFO Releasing 10.0.1.2
&lt;span class=&#34;ln&#34;&gt; 89&lt;/span&gt;2022-05-09 17:04:19.473 +02:00 INFO __item_stack:/item3/item3
&lt;span class=&#34;ln&#34;&gt; 90&lt;/span&gt;2022-05-09 17:04:19.496 +02:00 INFO __item_stack:/item3/item5
&lt;span class=&#34;ln&#34;&gt; 91&lt;/span&gt;2022-05-09 17:04:19.509 +02:00 INFO __item_stack:/item3/item0
&lt;span class=&#34;ln&#34;&gt; 92&lt;/span&gt;2022-05-09 17:04:19.515 +02:00 INFO __item_stack:/item3
&lt;span class=&#34;ln&#34;&gt; 93&lt;/span&gt;2022-05-09 17:04:19.525 +02:00 INFO __item_stack:/item3/item4
&lt;span class=&#34;ln&#34;&gt; 94&lt;/span&gt;2022-05-09 17:04:19.539 +02:00 INFO __item_stack:/item3/item2
&lt;span class=&#34;ln&#34;&gt; 95&lt;/span&gt;2022-05-09 17:04:19.550 +02:00 INFO __item_stack:/item3/item1
&lt;span class=&#34;ln&#34;&gt; 96&lt;/span&gt;2022-05-09 17:04:19.552 +02:00 INFO Allocated at the moment: 1,3,4,5
&lt;span class=&#34;ln&#34;&gt; 97&lt;/span&gt;2022-05-09 17:04:19.553 +02:00 INFO Releasing 10.0.1.3
&lt;span class=&#34;ln&#34;&gt; 98&lt;/span&gt;2022-05-09 17:04:19.559 +02:00 INFO __item_stack:/item3/item3
&lt;span class=&#34;ln&#34;&gt; 99&lt;/span&gt;2022-05-09 17:04:19.578 +02:00 INFO __item_stack:/item3/item5
&lt;span class=&#34;ln&#34;&gt;100&lt;/span&gt;2022-05-09 17:04:19.593 +02:00 INFO __item_stack:/item3/item0
&lt;span class=&#34;ln&#34;&gt;101&lt;/span&gt;2022-05-09 17:04:19.598 +02:00 INFO __item_stack:/item3
&lt;span class=&#34;ln&#34;&gt;102&lt;/span&gt;2022-05-09 17:04:19.603 +02:00 INFO __item_stack:/item0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At the end of the logs you can see releasing both allocated addresses.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Implementing your own destroy EBS is easy especially if you already have the vRO workflows to release the resources. It is a lightweight solution compared to Custom Resources.&lt;/p&gt;
&lt;p&gt;Download the &lt;em&gt;com.xaas.destroy.package&lt;/em&gt; containing the sample workflows from GitHub: &lt;a href=&#34;https://github.com/kuklis/vro8-packages&#34;&gt;https://github.com/kuklis/vro8-packages&lt;/a&gt;&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
